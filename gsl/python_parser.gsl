.template 0
 ignorecase = 0

 function classes_list
   result = ""
   for class
     result += "$(name)$(last() ?? "" ? ", ")"
   endfor
   return result
 endfunction

 macro parse_field
.  if defined(kind) & kind = "nested"
    $(name) = msg.$(name) if msg.HasField('$(name)') else None
.  elsif defined(kind) & kind = "oneof"
    $(name) = msg.$(name) if msg.HasField('$(name)') else None
.  else
    $(name) = msg.$(name)
.  endif
.endmacro

 function msg_param_list
   result = ""
   for field
     result += "$(name)$(last() ?? "" ? ", ")"
   endfor
   return result
 endfunction

.endtemplate
.template 1
@$(Msg).parser('$(->message.oneof_name)')
def $(parse_name)(msg: $(->message.full_name)) -> Union[$(classes_list())]:
.for ->message.field
.  parse_field()
.endfor
    # TODO return correct message instance
.for class
    #return $(name)($(msg_param_list()))
.endfor
    return None
.endtemplate
