<?xml version="1.0"?>
<package name="io">
  <message name="IOAction" oneof_name="io_action" oneof_tag="2">
    <description>Changes the configuration of one IO port</description>

    <field name="port">
      <proto type="uint32" tag="1"/>
      <python type="int"/>
    </field>
    <field name="flags">
      <proto type="IOFlags" tag="2"/>
      <python type="int"/>
    </field>

    <usage type="req" syntax="(port, flags)"
           class_name="Action">
      <description>IO action => ack</description>
    </usage>
  </message>
  <message name="IOCommandMessage" oneof_name="io_command_message" oneof_tag="16">
    <description>Request or reply for one IO port's current command. The command may change by an IO action.</description>

    <field name="port">
      <proto type="uint32" tag="1"/>
      <python type="int"/>
    </field>
    <field name="flags">
      <proto type="IOFlags" tag="2"/>
      <python type="int"/>
    </field>
    <field name="subscription" kind="nested">
      <proto type="Subscription" tag="3"/>
      <python type="Subscription"/>
    </field>

    <usage type="req" syntax="(port)"
           class_name="CommandRequest" complex="1">
      <description>IO command request => IO command reply</description>
      <field>port</field>
    </usage>
    <usage type="rep" syntax="(port, flags)"
           class_name="CommandReply" complex="1">
      <description>IO command reply</description>
      <field>port</field>
      <field>flags</field>
    </usage>
    <usage type="req" syntax="(port, subscription)"
           class_name="CommandSubscribe" complex="1">
      <description>IO command subscribe => ack</description>
      <field>port</field>
      <field>subscription</field>
    </usage>
    <usage type="upd" syntax="(port, flags, subscription)"
           class_name="CommandUpdate" complex="1">
      <description>IO command update</description>
    </usage>

    <parser dir="req" id="command">
      <usage>CommandRequest</usage>
      <usage>CommandSubscribe</usage>
    </parser>
    <parser dir="rep" id="command">
      <usage>CommandReply</usage>
      <usage>CommandUpdate</usage>
    </parser>
  </message>
  <message name="AnalogMessage" oneof_name="analog_message" oneof_tag="3">
    <description>Request or reply for one analog sensor's value</description>

    <field name="port">
      <proto type="uint32" tag="1"/>
      <python type="int"/>
    </field>
    <field name="value">
      <proto type="uint32" tag="2"/>
      <python type="int"/>
    </field>
    <field name="subscription" kind="nested">
      <proto type="Subscription" tag="3"/>
      <python type="Subscription"/>
    </field>

    <usage type="req" syntax="(port)"
           class_name="AnalogRequest" complex="1">
      <description>analog request => analog reply</description>
      <field>port</field>
    </usage>
    <usage type="rep" syntax="(port, value)"
           class_name="AnalogReply" complex="1">
      <description>analog reply</description>
      <field>port</field>
      <field>value</field>
    </usage>
    <usage type="req" syntax="(port, subscription)"
           class_name="AnalogSubscribe" complex="1">
      <description>analog subscribe => ack</description>
      <field>port</field>
      <field>subscription</field>
    </usage>
    <usage type="upd" syntax="(port, value, subscription)"
           class_name="AnalogUpdate" complex="1">
      <description>analog update</description>
    </usage>

    <parser dir="req" id="analog">
      <usage>AnalogRequest</usage>
      <usage>AnalogSubscribe</usage>
    </parser>
    <parser dir="rep" id="analog">
      <usage>AnalogReply</usage>
      <usage>AnalogUpdate</usage>
    </parser>
  </message>
  <message name="DigitalMessage" oneof_name="digital_message" oneof_tag="4">
    <description>Request or reply for one digital sensor's value</description>

    <field name="port">
      <proto type="uint32" tag="1"/>
      <python type="int"/>
    </field>
    <field name="value">
      <proto type="bool" tag="2"/>
      <python type="bool"/>
    </field>
    <field name="subscription" kind="nested">
      <proto type="Subscription" tag="3"/>
      <python type="Subscription"/>
    </field>

    <usage type="req" syntax="(port)"
           class_name="DigitalRequest" analog="1">
      <description>digital request => digital reply</description>
      <field>port</field>
    </usage>
    <usage type="rep" syntax="(port, value)"
           class_name="DigitalReply" analog="1">
      <description>digital reply</description>
      <field>port</field>
      <field>value</field>
    </usage>
    <usage type="req" syntax="(port, subscription)"
           class_name="DigitalSubscribe" complex="1">
      <description>digital subscribe => ack</description>
      <field>port</field>
      <field>subscription</field>
    </usage>
    <usage type="upd" syntax="(port, value, subscription)"
           class_name="DigitalUpdate" complex="1">
      <description>digital update</description>
    </usage>

    <parser dir="req" id="digital">
      <usage>DigitalRequest</usage>
      <usage>DigitalSubscribe</usage>
    </parser>
    <parser dir="rep" id="digital">
      <usage>DigitalReply</usage>
      <usage>DigitalUpdate</usage>
    </parser>
  </message>
</package>
